<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<!-- 配置mysql 驱动jar包路径.用了绝对路径 -->
	<classPathEntry
		location="D:\MavenLocalRepository\mysql\mysql-connector-java\5.1.43\mysql-connector-java-5.1.43.jar" />

	<context id="blog_mysql_tables" targetRuntime="MyBatis3">
		<!-- 生成一对一配置 -->
		<plugin type="cc.bandaotixi.plugins.OneToOnePlugin" />
		<!-- 生成一对多配置 -->
		<plugin type="cc.bandaotixi.plugins.OneToManyPlugin" />

		<!-- 为了防止生成的代码中有很多注释，比较难看，加入下面的配置控制 -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" />
			<property name="suppressDate" value="true" />
		</commentGenerator>
		<!-- 注释控制完毕 -->

		<!-- 数据库连接 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://127.0.0.1:3306/blog?characterEncoding=utf8"
			userId="root" password="root">
		</jdbcConnection>

		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 数据表对应的model 层 -->
		<javaModelGenerator targetPackage="net.nonego.blog.dao.generator.model"
			targetProject="src/main/java">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- sql mapper 隐射配置文件 -->
		<sqlMapGenerator targetPackage="net.nonego.blog.dao.generator.xml"
			targetProject="src/main/java">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<!-- 在ibatis2 中是dao层，但在mybatis3中，其实就是mapper接口 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="net.nonego.blog.dao.generator.mapper" targetProject="src/main/java">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
		</javaClientGenerator>

		<!-- 要对哪些数据表进行生成操作，必须要有一个. -->
		<table schema="user" tableName="user" domainObjectName="User"></table>
		<table schema="type" tableName="type" domainObjectName="Type"></table>
		<table schema="category" tableName="category" domainObjectName="Category"></table>
        <table schema="tag" tableName="tag" domainObjectName="Tag"></table>
        <table schema="article_tag" tableName="article_tag" domainObjectName="ArticleTag">
            <oneToOne mappingTable="tag" column="tag_id" joinColumn="tag_id" />
        </table>
        <table schema="article_category" tableName="article_category" domainObjectName="ArticleCategory">
            <oneToOne mappingTable="category" column="category_id" joinColumn="category_id" />
        </table>
		<table schema="article" tableName="article" domainObjectName="Article">
		  <oneToOne mappingTable="user" column="user_id" joinColumn="user_id" />
		  <oneToOne mappingTable="type" column="type_id" joinColumn="type_id" />
		  <oneToMany mappingTable="article_tag" column="article_id" joinColumn="article_id" />
		  <oneToMany mappingTable="article_category" column="article_id" joinColumn="article_id" />
		</table>
	</context>
</generatorConfiguration>